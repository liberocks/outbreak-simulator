{"version":3,"sources":["initiate.js","statistic.js","App.js","populate.js","serviceWorker.js","index.js"],"names":["random","min","max","Math","round","randomBool","prob","Person","p5","w","p","params","this","x","boundary","xl","xr","y","yt","yb","r","vx","vy","index","isStationary","isSick","isHealthy","isDead","isRecovered","willDead","sickTime","parseInt","v","setvx","setvy","population","filter","item","person","sqrt","pow","getx","gety","inverse","makeStationary","tx","getvx","ty","getvy","makeSick","abs","isCollide","recoveryPeriod","period","makeDead","makeRecovered","fill","circle","statistic","healthy","sick","recovered","dead","total","iteration","isStart","sickPeople","i","initialCase","push","deadPeople","mortality","stationary","socialDistance","n","result","randn","includes","makeWillDead","rectMode","rect","reference","width","i8","language","recalculate","textSize","textStyle","text","count","textAlign","overtime","time","floor","map","recoveredy","healthyy","sicky","initialState","isolationObject","schema","Yup","integer","required","english","title","subtitle","description","href","recovery","simulate","disclaimer","resolution","stayathome","indonesia","ParameterForm","onSubmit","isActive","validationSchema","values","initialValues","handleSubmit","handleChange","handleBlur","touched","errors","isValid","Form","noValidate","Row","Group","as","Col","md","controlId","Label","Control","type","name","value","onChange","Button","className","variant","size","worldState","height","App","window","innerWidth","innerHeight","useState","parameters","setParameters","isStarted","setStarted","setLanguage","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Container","Nav","NavDropdown","Item","onClick","inline","Brand","style","fontSize","scrollTo","behavior","top","display","alignItems","justifyContent","setup","parent","createCanvas","noStroke","initiate","draw","update","populate","backgroundColor","borderTop","padding","left","bottom","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13706a6b.chunk.js","sourcesContent":["function random (min, max) {\n  return Math.round(min + Math.random() * (max - min))\n}\n\nfunction randomBool (prob) {\n  return Math.random() <= (prob / 100.0)\n}\n\nfunction randn (min, max, n) {\n  const result = []\n  for (let i = 0; i < n; i++) {\n    result.push(random(min, max))\n  }\n\n  return result\n}\n\nclass Person {\n  constructor (p5, w, p, params = {}) {\n    this.x = random(w.boundary.xl, w.boundary.xr)\n    this.y = random(w.boundary.yt, w.boundary.yb)\n    this.p5 = p5\n    this.r = 8\n    this.vx = 1\n    this.vy = 1\n    this.index = params.index\n\n    this.isStationary = params.isStationary ? params.isStationary : false\n    if (this.isStationary) {\n      this.vx = 0\n      this.vy = 0\n    }\n\n    this.isSick = false\n    this.isHealthy = true\n    this.isDead = false\n    this.isRecovered = false\n    this.willDead = false\n\n    this.w = w\n    this.p = p\n    this.sickTime = 0\n  }\n\n  makeWillDead () {\n    this.willDead = true\n  }\n\n  inverse () {\n    this.vx *= -1\n    this.vy *= -1\n  }\n\n  inversex () {\n    this.vx *= -1\n  }\n\n  getx () {\n    return parseInt(`${this.x}`)\n  }\n\n  setx (x) {\n    this.x = parseInt(`${x}`)\n  }\n\n  getvx () {\n    return parseInt(`${this.vx}`)\n  }\n\n  setvx (v) {\n    this.vx = parseInt(`${v}`)\n  }\n\n  gety () {\n    return parseInt(`${this.y}`)\n  }\n\n  sety (y) {\n    this.y = parseInt(`${y}`)\n  }\n\n  getvy () {\n    return parseInt(`${this.vy}`)\n  }\n\n  setvy (v) {\n    this.vy = parseInt(`${v}`)\n  }\n\n  makeStationary () {\n    this.vx = 0\n    this.vy = 0\n    this.isStationary = true\n  }\n\n  makeSick () {\n    this.isSick = true\n    this.isHealthy = false\n    this.isDead = false\n    this.isRecovered = false\n  }\n\n  makeHealthy () {\n    this.isSick = false\n    this.isHealthy = true\n    this.isDead = false\n    this.isRecovered = false\n  }\n\n  makeDead () {\n    this.isSick = false\n    this.isHealthy = false\n    this.isDead = true\n    this.isRecovered = false\n    this.setvx(0)\n    this.setvy(0)\n  }\n\n  makeRecovered () {\n    this.isSick = false\n    this.isHealthy = false\n    this.isDead = false\n    this.isRecovered = true\n  }\n\n  isCollide () {\n    for (const person of this.w.population.filter(item => (item.index !== this.index) && !item.isDead)) {\n      const distance = Math.sqrt(Math.pow(this.getx() - person.getx(), 2) + Math.pow(this.gety() - person.gety(), 2))\n      const d = (this.r + person.r) / 2\n\n      if (distance <= d) {\n        if (person.isStationary && !this.isStationary) {\n          this.inverse()\n          person.makeStationary()\n        } else if (!person.isStationary && this.isStationary) {\n          // do nothing\n        } else if (person.isStationary && this.isStationary) {\n          this.makeStationary()\n          person.makeStationary()\n        } else {\n          const tx = person.getvx()\n          const ty = person.getvy()\n\n          person.vx = this.getvx()\n          person.vy = this.getvy()\n\n          this.vx = tx\n          this.vy = ty\n        }\n\n        if (!this.isRecovered && this.isHealthy) {\n          if (person.isSick) this.makeSick()\n        }\n\n        if (!person.isRecovered && person.isHealthy) {\n          if (this.isSick) person.makeSick()\n        }\n      }\n    }\n  }\n\n  update () {\n    this.x += this.vx\n    if (this.x > (this.w.boundary.xr - this.r / 2)) this.setvx(-1 * Math.abs(this.getvx()))\n    if (this.x < (this.w.boundary.xl + this.r / 2)) this.setvx(Math.abs(this.getvx()))\n\n    this.y += this.vy\n    if (this.y > (this.w.boundary.yb - this.r / 2)) this.setvy(-1 * Math.abs(this.getvy()))\n    if (this.y < (this.w.boundary.yt + this.r / 2)) this.setvy(Math.abs(this.getvy()))\n\n    this.isCollide()\n\n    if (this.isSick) this.sickTime += 1\n\n    if (this.isSick && this.sickTime >= (3 * this.p.recoveryPeriod * this.w.period) && this.sickTime <= (8 * this.p.recoveryPeriod * this.w.period)) {\n      if (this.willDead && randomBool(10)) this.makeDead()\n    }\n\n    if (this.isSick && this.sickTime >= (10 * this.p.recoveryPeriod * this.w.period)) {\n      if (randomBool(25)) this.makeRecovered()\n    }\n  }\n\n  draw () {\n    if (this.isHealthy) this.p5.fill('#81c53e')\n    else if (this.isSick) this.p5.fill('#b40428')\n    else if (this.isRecovered) this.p5.fill('#3e53c5')\n    else if (this.isDead) this.p5.fill('#000000')\n\n    if (!this.isDead) {\n      this.p5.circle(this.x, this.y, this.r)\n      this.p5.fill(255)\n    }\n  }\n}\n\nexport default function (p5, p, w) {\n  w.statistic.healthy = 0\n  w.statistic.sick = 0\n  w.statistic.recovered = 0\n  w.statistic.dead = 0\n  w.statistic.total = p.population\n  w.population = []\n  w.iteration = 0\n  w.isStart = true\n\n  const sickPeople = []\n  for (let i = 0; i < p.initialCase; i++) sickPeople.push(i)\n\n  const deadPeople = []\n  for (let i = 0; i < (p.population * p.mortality / 100); i++) deadPeople.push(i)\n\n  const stationary = []\n  for (let i = 0; i < (p.population * p.socialDistance / 100); i++) stationary.push(i)\n\n  randn(0, p.population, 2 * p.socialDistance * p.population / 100)\n  for (let i = 0; i < p.population; i++) {\n    const params = { index: i }\n    if (stationary.includes(i)) params.isStationary = true\n\n    w.population.push(new Person(p5, w, p, params))\n    if (sickPeople.includes(i)) w.population[i].makeSick()\n    if (deadPeople.includes(i)) w.population[i].makeWillDead()\n  }\n\n  p5.rectMode('corners')\n  p5.fill(200)\n  p5.rect(w.reference.x + 200, w.reference.y + 15, w.width - w.reference.x, w.reference.y + 90)\n  p5.fill('#343a40')\n  p5.rectMode('corner')\n}\n","function recalculate (w) {\n  w.statistic.healthy = 0\n  w.statistic.sick = 0\n  w.statistic.recovered = 0\n  w.statistic.dead = 0\n\n  for (const person of w.population) {\n    if (person.isHealthy) w.statistic.healthy += 1\n    if (person.isSick) w.statistic.sick += 1\n    if (person.isRecovered) w.statistic.recovered += 1\n    if (person.isDead) w.statistic.dead += 1\n  }\n}\n\nexport default function (p5, w) {\n  const i8 = w.i8\n  const language = w.language\n\n  recalculate(w)\n\n  p5.fill(255)\n  p5.rect(0, 0, 200, 130)\n\n  p5.fill('#343a40')\n  p5.textSize(16)\n  p5.textStyle('bold')\n  p5.text(i8[language].count, w.reference.x, w.reference.y)\n  p5.textStyle('normal')\n\n  p5.fill('#3e53c5')\n  p5.rect(w.reference.x, w.reference.y + 17, 15, 15)\n  p5.fill('#343a40')\n  p5.text(i8[language].recovered, w.reference.x + 25, w.reference.y + 30)\n  p5.textAlign('right')\n  p5.textStyle('bold')\n  p5.fill('#3e53c5')\n  p5.text(w.statistic.recovered, w.reference.x + 160, w.reference.y + 30)\n  p5.fill('#343a40')\n  p5.textStyle('normal')\n  p5.textAlign('left')\n\n  p5.fill('#81c53e')\n  p5.rect(w.reference.x, w.reference.y + 37, 15, 15)\n  p5.fill('#343a40')\n  p5.text(i8[language].healthy, w.reference.x + 25, w.reference.y + 50)\n  p5.textAlign('right')\n  p5.textStyle('bold')\n  p5.fill('#81c53e')\n  p5.text(w.statistic.healthy, w.reference.x + 160, w.reference.y + 50)\n  p5.fill('#343a40')\n  p5.textStyle('normal')\n  p5.textAlign('left')\n\n  p5.fill('#b40428')\n  p5.rect(w.reference.x, w.reference.y + 57, 15, 15)\n  p5.fill('#343a40')\n  p5.text(i8[language].sick, w.reference.x + 25, w.reference.y + 70)\n  p5.textAlign('right')\n  p5.textStyle('bold')\n  p5.fill('#b40428')\n  p5.text(w.statistic.sick, w.reference.x + 160, w.reference.y + 70)\n  p5.fill('#343a40')\n  p5.textStyle('normal')\n  p5.textAlign('left')\n\n  p5.fill('#000000')\n  p5.rect(w.reference.x, w.reference.y + 77, 15, 15)\n  p5.fill('#343a40')\n  p5.text(i8[language].dead, w.reference.x + 25, w.reference.y + 90)\n  p5.textAlign('right')\n  p5.textStyle('bold')\n  p5.fill('#000000')\n  p5.text(w.statistic.dead, w.reference.x + 160, w.reference.y + 90)\n  p5.fill('#343a40')\n  p5.textStyle('normal')\n  p5.textAlign('left')\n\n  p5.fill(255)\n  p5.rect(w.reference.x + 200, w.reference.y - 20, 150, 30)\n  p5.fill('#343a40')\n  p5.textStyle('bold')\n  p5.text(i8[language].overtime, w.reference.x + 200, w.reference.y)\n  p5.textStyle('normal')\n\n  const time = () => Math.floor(p5.map(w.iteration, 0, 365 * w.period, w.reference.x + 200, w.width - w.reference.x))\n\n  const recoveredy = p5.map(w.statistic.recovered, 0, w.statistic.total, w.reference.y + 15, w.reference.y + 90)\n  const healthyy = p5.map(w.statistic.healthy, 0, w.statistic.total, w.reference.y + 15, w.reference.y + 90)\n  const sicky = p5.map(w.statistic.total - w.statistic.sick, 0, w.statistic.total, w.reference.y + 15, w.reference.y + 90)\n\n  p5.rectMode('corners')\n\n  p5.fill('#000000')\n  p5.rect(time(), w.reference.y + 15, time() + 1, w.reference.y + 90)\n  p5.fill('#b40428')\n  p5.rect(time(), sicky, time() + 1, w.reference.y + 90)\n\n  if (healthyy > recoveredy) {\n    p5.fill('#81c53e')\n    p5.rect(time(), healthyy, time() + 1, w.reference.y + 15)\n    p5.fill('#3e53c5')\n    p5.rect(time(), recoveredy, time() + 1, w.reference.y + 15)\n  } else {\n    p5.fill('#3e53c5')\n    p5.rect(time(), w.reference.y + 15 , time() + 1, recoveredy + healthyy)\n    p5.fill('#81c53e')\n    p5.rect(time(), healthyy, time() + 1, w.reference.y + 15)\n  }\n  p5.fill('#343a40')\n  p5.rectMode('corner')\n}\n","import React, { useState } from 'react'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport Sketch from 'react-p5'\n\nimport './bootstrap.min.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nimport './App.css'\n\nimport initiate from './initiate'\nimport populate from './populate'\nimport statistic from './statistic'\n\nconst initialState = {\n  population: 250,\n  mortality: 2,\n  recoveryPeriod: 14,\n  socialDistance: 10,\n  initialCase: 1,\n  isolationObject: 0\n}\n\nconst schema = Yup.object({\n  population: Yup.number().integer().min(2).max(400).required(),\n  mortality: Yup.number().min(0).max(100).required(),\n  recoveryPeriod: Yup.number().min(1).required(),\n  socialDistance: Yup.number().min(0).max(100).required(),\n  initialCase: Yup.number().min(1).required()\n})\n\nconst i8 = {\n  english: {\n    language: 'English',\n    title: 'Disease Outbreak Simulator',\n    subtitle: 'Original Post : Why outbreaks like coronavirus spread exponentially, and how to \"flatten the curve\"',\n    description: (\n      <>\n        Getting inspired by <a href='https://www.washingtonpost.com/graphics/2020/world/corona-simulator/'>an article in Washington Post</a>,\n      I decided to remake the simulation. This simulation try to emphasize how important social distance is\n      to reduce the spread of the disease. This simulation might be not accurate and just for educational purposes only.\n      </>\n    ),\n    population: 'Population (person)',\n    recovery: 'Recovery Period (time unit)',\n    mortality: 'Mortality Rate (percent)',\n    initialCase: 'Initial Case (person)',\n    socialDistance: 'Social Distance (percent)',\n    simulate: 'Simulate',\n    healthy: 'Healthy',\n    sick: 'Sick',\n    recovered: 'Recovered',\n    dead: 'Dead',\n    count: 'Count',\n    overtime: 'Change overtime',\n    disclaimer: (\n      <>\n        <b>Disclaimer: </b> The content of this website does not constitute medical advice.\n      The information provided above is meant to be an educational purpose.\n      There is no guarantee for scientific evidence to this simulator.\n      There is also no guarantee that following these guidelines will reduce the risk of getting infected with SARS-CoV-2 or any other viral or bacterial contagion.\n      All information provided on this website is given with the best intent to educate for the impact of social distancing.\n      In no event shall the website operators be held liable for any claim, damages or other liabilities.\n      If you have concerns or comments about the information provided on this website, please write to me <a href='mailto:tirtadwipa.manunggal@gmail.com'>tirtadwipa.manunggal@gmail.com</a>.\n      </>\n    ),\n    resolution: 'Please use desktop or wider monitor resolution or desktop mode if you are in mobile, and then reload the page.',\n    stayathome: (<>supporting <a href='https://staythefuckhome.com/'>#staythefuckhome</a></>)\n  },\n  indonesia: {\n    language: 'Bahasa Indonesia',\n    title: 'Simulator Penyebaran Wabah',\n    subtitle: 'Kiriman Asli : Mengapa wabah seperti coronavirus menyebar secara eksponensial, dan bagaimana cara untuk \"menekan kurva tersebut\"',\n    description: (\n      <>\n        Terinspirasi dari <a href='https://www.washingtonpost.com/graphics/2020/world/corona-simulator/'>sebuah artikel dari Washington Post</a>,\n      kami memutuskan untuk membuat ulang simulasi yang ada pada situs tersebut. Simulasi ini mencoba menekankan\n      pentingnya apa yang disebut <i>social distance</i> untuk mengurangi dampak dari penyebaran sebuah wabah penyakit.\n      Simulasi ini mungkin tidak bisa akurat dan hanya dipergunakan untuk kepentingan edukasi.\n      </>\n    ),\n    population: 'Populatsi (orang)',\n    recovery: 'Masa Pemyembuhan (satuan waktu)',\n    mortality: 'Mortalitas (persen)',\n    initialCase: 'Kasus Awalan (orang)',\n    socialDistance: 'Jarak Sosial (persen)',\n    simulate: 'Simulasikan',\n    healthy: 'Sehat',\n    sick: 'Sakit',\n    recovered: 'Sembuh',\n    dead: 'Meninggal',\n    count: 'Cacah Jiwa',\n    overtime: 'Dinamika Terhadap Waktu',\n    disclaimer: (\n      <>\n        <b>Sangkalan: </b> Konten dari situs ini bukan merupakan saran medis.\n      Informasi yang disajikan di atas ditujukan semata-mata untuk kepentingan edukasi.\n      Tidak ada jaminan kebenaran secara saintifik atas simulator ini. Tidak\n      ada jaminan pula bahwa petunjuk dalam simulasi ini akan mengurangi resiko\n      terinfeksi SARS-CoV-2 atau penyakit menular dari bakteri maupun virus. Semua\n      maklumat yang disajikan dalam situs ini diumumkan dengan niat mengedukasi pentingnya\n      dampak penjarakan sosial. Dalam keadaan apa pun, operator situs tidak bertanggung jawab atas klaim, kerusakan, atau kerugian lainnya.\n      Jika ada persoalan maupun saran yang ingin diberikan tentang informasi dalam laman ini, bisa diarahkan ke <a href='mailto:tirtadwipa.manunggal@gmail.com'>tirtadwipa.manunggal@gmail.com</a>.\n      </>\n    ),\n    resolution: 'Mohon gunakan komputer desktop atau layar yang lebih lebar atau mode desktop jika Anda mengakses melalui gawai, kemudian segarkan laman.',\n    stayathome: (<>mendukung <a href='https://diamdirumahcuk.com/'>#diamdirumahcuk</a></>)\n  }\n}\n\nfunction ParameterForm ({ onSubmit, language, isActive }) {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={values => {\n        onSubmit(values)\n      }}\n      initialValues={initialState}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} md='4' controlId='validationFormik01'>\n              <Form.Label>{i8[language].population}</Form.Label>\n              <Form.Control\n                type='number'\n                name='population'\n                value={values.population}\n                onChange={handleChange}\n                isValid={touched.population && !errors.population}\n              />\n            </Form.Group>\n            <Form.Group as={Col} md='4' controlId='validationFormik02'>\n              <Form.Label>{i8[language].recovery}</Form.Label>\n              <Form.Control\n                type='number'\n                name='recoveryPeriod'\n                value={values.recoveryPeriod}\n                onChange={handleChange}\n                isValid={touched.recoveryPeriod && !errors.recoveryPeriod}\n              />\n            </Form.Group>\n            <Form.Group as={Col} md='4' controlId='validationFormik01'>\n              <Form.Label>{i8[language].mortality}</Form.Label>\n              <Form.Control\n                type='number'\n                name='mortality'\n                value={values.mortality}\n                onChange={handleChange}\n                isValid={touched.mortality && !errors.mortality}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md='4' controlId='validationFormik01'>\n              <Form.Label>{i8[language].initialCase}</Form.Label>\n              <Form.Control\n                type='number'\n                name='initialCase'\n                value={values.initialCase}\n                onChange={handleChange}\n                isValid={touched.initialCase && !errors.initialCase}\n              />\n            </Form.Group>\n            <Form.Group as={Col} md='4' controlId='validationFormik02'>\n              <Form.Label>{i8[language].socialDistance}</Form.Label>\n              <Form.Control\n                type='number'\n                name='socialDistance'\n                value={values.socialDistance}\n                onChange={handleChange}\n                isValid={touched.socialDistance && !errors.socialDistance}\n              />\n            </Form.Group>\n          </Form.Row>\n          {\n            !isActive ? (\n              <>\n                <Button className='my-3' variant='primary' size='lg' type='submit'>{i8[language].simulate}</Button>\n              </>\n            ) : <></>\n          }\n\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nconst worldState = {\n  i8,\n  language: null,\n  statistic: {\n    healthy: 0, sick: 0, recovered: 0, dead: 0, total: 1\n  },\n  population: [],\n  iteration: 0,\n  period: 10,\n  height: 0,\n  width: 0,\n  reference: { x: 30, y: 20 },\n  boundary: {\n    xl: 30,\n    xr: 0,\n    yt: 150,\n    yb: 0\n  }\n}\n\nconst App = () => {\n  const { innerWidth, innerHeight } = window\n  const [parameters, setParameters] = useState(initialState)\n  const [isStarted, setStarted] = useState(false)\n  const [language, setLanguage] = useState('english')\n\n  worldState.language = language\n  worldState.height = 0.45 * 0.75 * innerWidth\n  worldState.width = 0.75 * innerWidth\n  worldState.boundary.xr = (0.75 * innerWidth) - 30\n  worldState.boundary.yb = (0.45 * 0.75 * innerWidth) - 20\n\n  const goSimulate = (values) => {\n    setParameters(values)\n    setStarted(true)\n    window.scrollTo({\n      behavior: 'smooth',\n      top: innerHeight\n    })\n  }\n\n  const setup = (p5, parent) => {\n    p5.createCanvas(worldState.width, worldState.height).parent(parent)\n    p5.noStroke()\n    initiate(p5, parameters, worldState)\n  }\n\n  const draw = p5 => {\n    if (isStarted) {\n      statistic(p5, worldState)\n      populate(p5, worldState)\n    }\n  }\n\n  return (\n    <>\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Container>\n            <Nav className='mr-auto'>\n              <NavDropdown title={i8[language].language} id='basic-nav-dropdown'>\n                <NavDropdown.Item onClick={() => setLanguage('english')}> English</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => setLanguage('indonesia')}>Bahasa Indonesia</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline>\n              <Navbar.Brand>{i8[language].stayathome}</Navbar.Brand>\n            </Form>\n          </Container>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container className='mt-5'>\n        <h1 className='header' style={{ fontSize: '48pt' }}>{i8[language].title}</h1>\n        <h4 className='header mb-5'>{i8[language].subtitle}</h4>\n        <p className='mb-5' style={{ fontSize: '16pt' }}>{i8[language].description}</p>\n        <ParameterForm onSubmit={goSimulate} language={language} isActive={isStarted} />\n\n        {\n          isStarted ? (worldState.height < 320) ? <>  <Button className='my-5' variant='outline-danger'>{i8[language].resolution}</Button></> : (\n            <>\n              <Sketch style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }} className='mt-5 pb-5' setup={setup} draw={draw} />\n              <div>\n                <small className='pb-5'>{i8[language].disclaimer}</small>\n                <div className='mt-5' style={{ backgroundColor: '#fff', borderTop: '1px solid #E7E7E7', textAlign: 'center', padding: '15px', left: '0', bottom: '0', height: '60px', width: '100%' }}>\n                  <small>Created with curiosity by <a href='https://github.com/linerocks'>linerocks</a></small>\n                </div>\n              </div>\n            </>\n          ) : <></>\n        }\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","export default function (p5, w) {\n  if (w.iteration <= 365 * w.period) w.iteration += 1\n  else return\n\n  p5.rectMode('corners')\n  p5.fill('#f8f9fa')\n  p5.rect(w.boundary.xl - 5, w.boundary.yt - 5, w.boundary.xr + 5, w.boundary.yb + 5)\n  p5.fill('#343a40')\n  p5.rectMode('corner')\n\n  for (const person of w.population) {\n    person.update()\n    person.draw()\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}